---
- hosts: all
  become: yes
  tasks:
  #  - name: Sleep for 10 minutes and continue with play
  #    ansible.builtin.wait_for:
  #      timeout: 600

   - name: Wait for previous ansible run to complete
     shell: while ps -ef | grep -i k8-on-lza-all.yaml | grep -v 'grep' ; do sleep 10; done;

   - name: Wait for /var/lib/dpkg/lock-frontend to be released 
     shell: while lsof /var/lib/dpkg/lock-frontend ; do sleep 10; done;

   - name: Kubeadm Install
     apt:
       name: kubeadm
       state: present
       update_cache: true

   - name: Kubectl Install
     apt:
       name: kubectl
       state: present
       force: yes
     delay: 10
     retries: 12

   - name: Start the cluster
     shell: kubeadm init --pod-network-cidr=192.168.0.0/16 --cri-socket /run/cri-dockerd.sock --control-plane-endpoint "{{ master_lb }}":6443 --upload-certs >> cluster.txt
     register: result
     args:
      chdir: /root/
      creates: cluster.txt
     delay: 10
     retries: 12
  
   - name: Sleep for 20 seconds
     wait_for:
      timeout: 20

   - name: Create .kube directory
     become: yes
     become_user: ubuntu
     file:
       path: /home/ubuntu/.kube
       state: directory
       mode: 0755
     delay: 10
     retries: 12

   - name: Check admin.conf file exists.
     stat:
       path: /etc/kubernetes/admin.conf
     register: k8s_conf
     delay: 10
     retries: 12

   - name: Copy admin.conf to user's kube config
     copy:
       src: /etc/kubernetes/admin.conf
       dest: /home/ubuntu/.kube/config
       remote_src: yes
       owner: ubuntu
     when: k8s_conf.stat.exists
     delay: 10
     retries: 12

   - name: Install Pod network
     become_user: ubuntu
     become_method: su
     become_flags: '-s /bin/sh'
     shell: kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml >> pod_setup.txt
     args:
       chdir: /home/ubuntu/
       creates: pod_setup.txt
     delay: 10
     retries: 12

   - name: get default kubeadm config
     shell: kubeadm config print init-defaults > kubeadm_config.yaml
     args:
       chdir: /root/
       creates: kubeadm-config.yaml
     delay: 10
     retries: 12

   - name: Add cri socket to kubeadm config
     replace:
      path: /root/kubeadm_config.yaml
      regexp: "/var/run/containerd/containerd.sock"
      replace: "/run/cri-dockerd.sock"
     delay: 10
     retries: 12

   - name: Create a new certificate key
     shell: kubeadm init phase upload-certs --upload-certs --config /root//kubeadm_config.yaml
     register: join_certificate_key
     delay: 10
     retries: 12

   - name: Get join command
     shell: kubeadm token create --print-join-command --certificate-key "{{ join_certificate_key.stdout_lines[2] }}"
     register: join_command
     delay: 10
     retries: 12

   - debug:
      var: join_command

   - name: Copy join command to local file
     local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join_command"

   - name: Get worker node join command
     shell: kubeadm token create --print-join-command
     register: join_node_command
     delay: 10
     retries: 12

   - name: Copy worker node join command to local file
     local_action: copy content="{{ join_node_command.stdout_lines[0] }}" dest="./join_node_command"
     delay: 10
     retries: 12

   - name: Upload join_node_command to S3
     amazon.aws.s3_object:
       bucket: "{{ bucket }}"
       object: /join_node_command
       src: join_node_command
       mode: put
     delay: 10
     retries: 12

   - name: Upload join_command to S3
     amazon.aws.s3_object:
       bucket: "{{ bucket }}"
       object: /join_command
       src: join_command
       mode: put
     delay: 10
     retries: 12